{
  "hash": "59c049f1267de671eba3d6f679023ae7",
  "result": {
    "markdown": "# Data Summary\n\n## Preamble\n\n\n::: {.panel-tabset}\n\n### Chapter Objective\n\nThe objective of this chapter is the same as that of Chapter 2. However, we will analyze severity.\n\n### Packages\n\nHere is the list of packages that will be used:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(vtable)\nlibrary(rpart)\nlibrary(repr)\nlibrary(rpart.plot)\nlibrary(rfCountData)\nlibrary(gam)\n```\n:::\n\n\n### Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndataS <- read.csv('Data/Synthetic.csv')\ndata <- dataS[dataS$AMT_Claim > 0,]\ndata$M_Claim <- data$AMT_Claim/data$NB_Claim\n\n# Modifications \ndata <- data %>%\n  mutate(Territory = as.factor(Territory)) %>%\n  select(-c('Annual.pct.driven', 'Annual.miles.drive'))\n\ndata.select <- data\n\n# Train-test et folds\nset.seed(123)\ntrain <- data.select %>% sample_frac(0.8, replace = FALSE)\ntest <- data.select %>% anti_join(train)\n```\n:::\n\n\n:::\n\n\n## Traditional covariates {#sec-vartrad}\n\nDuration is often not considered in the modeling of severity so we don't use it for the severity analysis.\n\n### Sensitive information {#sec-sensibles}\n\n::: {.panel-tabset}\n\n### Credit score \n\nWe conduct the same exercise with the credit score. In the graph below, we can see the relation between the credit score and claim severity in the portfolio: the points indicate the observed claims average severity, the size of the points measures the Number of claims for each group, and a trend curve (in red) for the average severity has been added.  \nAs for the frequency, we observe a non-linear relationship, but overall, a better credit score implies a lower claim severity.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Credit.score/25) * 25) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + \n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Credit score',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Credit Score](severity_files/figure-html/fig-CreditScore-1.png){#fig-CreditScore width=864}\n:::\n:::\n\n\n### Age of the insured\n\nThe age of the insured is also a sensitive variable in ratemaking. \nThe graph below illustrates the relationship between age and claim severity. There is a negative relationship between the age and the average claim severity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Insured.age/10) * 10) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) + \n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Age',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Age](severity_files/figure-html/fig-InsuredAge-1.png){#fig-InsuredAge width=864}\n:::\n:::\n\n\n### Sex of the insured\n\nThe graph below shows the distribution of gender in the portfolio (in bars), as well as the observed average claim severity (in red). We do not see a significant difference between means which can be confirmed using, e.g., the Welch two sample t-test. The $p$-value of the test is $0.2573$ meaning that the null hypothesis, the true difference in means is equal to $0$, cannot be rejected.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Insured.sex) %>%\n  group_by(Var_) %>%\n  summarize(Msev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = Msev/1)\n\ndiv <- min(temp$expo/temp$sev)/1.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Number of claims\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype = \"Claim severity\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Sex',\n       y = 'Number of claims') +\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claim severity\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Sex](severity_files/figure-html/fig-InsuredSex-1.png){#fig-InsuredSex width=864}\n:::\n:::\n\n\n\n### Marital Status\n\nThe marital status of the insured individual has a minimal impact on the average claim severity. A $95$ percent confidence interval for the true difference in means is $[-797, -12]$, which is very close to including $0$.\n\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Marital) %>%\n  group_by(Var_) %>%\n  summarize(mSev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = mSev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.8\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Number of claims\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n             inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype = \"Claim Severity\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Marital status',\n       y = 'Number of claims') +\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Average claim Severity\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Marital Status](severity_files/figure-html/fig-Marital-1.png){#fig-Marital width=864}\n:::\n:::\n\n\n### Insured's territory\n\nWe note that territory does not significantly impact a claim severity except for categories 74 and 91. For territory 74, this is mainly explained by a large claim ($104,074.9). Given these categories artificial nature, it is impossible to offer a rational explanation.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Territory) %>%\n  group_by(Var_) %>%\n  summarize(mSev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = mSev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.4\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Number of claims\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=1.5,\n             inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype = \"Average Claim Severity\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Territory',\n       y = 'Number of claims') +\n  scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Average claim severity\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Territory](severity_files/figure-html/fig-Terr-1.png){#fig-Terr width=864}\n:::\n:::\n\n\n### Correlation\n\nThe correlation matrix below indicates the level of dependence between each of the sensitive variables. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\")\n\ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\nplt <- ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=10, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 10),\n          plot.title = element_text(size = 10),   # Adjust plot title font size\n          legend.text = element_text(size = 10),\n          legend.title = element_text(size=10))\nprint(plt)\n```\n\n::: {.cell-output-display}\n![Correlation between sensible covariates](severity_files/figure-html/fig-Corr0-1.png){#fig-Corr0 width=672}\n:::\n:::\n\n\n\n\n:::\n\n\n### Other covariates {#sec-vtautres}\n\n::: {.panel-tabset}\n\n### Car Age\n\nThe graph below highlights the relationship between claim severity and vehicle age. A fairly clear link is observed: the newer a vehicle is, the more it costs.\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Car.age/1) * 1) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Car age',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Car Age](severity_files/figure-html/fig-CarAge-1.png){#fig-CarAge width=864}\n:::\n:::\n\n\n\n### Use of the car\n\nIn the graph below, we see that the use of the vehicle has an impact on the average claim severity. We notice a very low exposure for two categories: farmer and commercial. If we focus only on the other two categories, the difference remains significant (the $p$-value is very close to $0$). However, this effect seems to disappear if we also take into account the car age.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Car.use) %>%\n  group_by(Var_) %>%\n  summarize(mSev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = mSev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.07\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Number of claims')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n             inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype = 'Claim Severity'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Car Use',\n       y = 'Number of claims') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claim Severity\"))  + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Car Use](severity_files/figure-html/fig-CarUse-1.png){#fig-CarUse width=864}\n:::\n:::\n\n\n### Region\n\nThe difference in severity between urban and rural claims is illustrated in the graph below. The $p$ value is very close to $5\\%$, a $95$ percent confidence interval for the true difference in means is $[-892, -1.49]$, and we conclude there is no significant difference between these two regions.\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Region) %>%\n  group_by(Var_) %>%\n  summarize(mSev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = mSev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Number of claims')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype='Claim Severity'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Region',\n       y = 'Number of claims') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claim Severity\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Region](severity_files/figure-html/fig-Region-1.png){#fig-Region width=864}\n:::\n:::\n\n\n\n### Years without Claim\n\nThe graph below illustrates the relationship between the number of claim-free years and the average claim severity. The link between these two variables is unclear.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = pmin(Years.noclaims, 60)) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Years without claim',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Years without Claim](severity_files/figure-html/fig-YWC-1.png){#fig-YWC width=864}\n:::\n:::\n\n\n\n### Correlation\n\nBelow, we can observe the correlation that exists between the traditional segmentation variables. \n\n\n::: {#fig-Corr .cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Car.use\", \"Region\", \"Car.age\", \"Years.noclaims\")\n\ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:9, 6:9]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:9]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Other traditionnal covariates](severity_files/figure-html/fig-Corr-1.png){#fig-Corr-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr-2.png){#fig-Corr-2 width=672}\n:::\n\nCorrelation between traditional covariates\n:::\n\n\n\n::: \n\n## Telematic covariates {#sec-vartele}\n\n### Vehicle usage level {#sec-tele1}\n\n::: {.panel-tabset}\n\n### Annual Miles Driven\n\nIn addition to the declared distance, we also have access to the actual distance traveled by the insured \nthrough the telematics device installed in the vehicle. It is increasingly recognized that the distance \ndriven in a car can constitute a more precise measure of risk exposure than simply the duration of the insurance \ncontract. However, \n\nThe graph below illustrates the claim severity as a function of the distance driven. \nThere appears to be a small negative relationship between these two variables.\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ifelse(Total.miles.driven < 20000, ceiling(Total.miles.driven/1000) * 1000, ceiling(Total.miles.driven/5000) * 5000)) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Total miles driven',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  xlim(0,25000)+\n  ylim(0, 7500)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. Total Miles Driven](severity_files/figure-html/fig-MilesDriveb-1.png){#fig-MilesDriveb width=864}\n:::\n:::\n\n\n\n\n### Contract duration revisited\n\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Miles.per.day = Total.miles.driven/Duration, \n                Duration.y = Duration/365.25, \n                Group = ceiling(Miles.per.day/7.5) * 7.5) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average miles driven per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  xlim(0,127.5)+\n  #ylim(0, 0.31)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. average miles driven per day](severity_files/figure-html/fig-AveMilesDriveb-1.png){#fig-AveMilesDriveb width=864}\n:::\n:::\n\n\n### Days per week\n\nAnother intensity measure that may be close to the usage percentage is the average number of vehicle uses per week. \nThe graph below shows no clear relationship between these two variables.\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Avgdays.week/0.5) * 0.5) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of days per week',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(0, 0.31)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average claim severity vs. average number of days per week the car is used](severity_files/figure-html/fig-AveNum-1.png){#fig-AveNum width=864}\n:::\n:::\n\n\n### Correlation\n\nOnce again, we can observe the dependency between the covariates by looking at the results below. \n\n\n::: {#fig-Corr2 .cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Miles.per.day\", \"Avgdays.week\")\n\ntrain <- train %>%\n  dplyr::mutate(Miles.per.day = Total.miles.driven/Duration)\n                \ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:7, 6:7]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:7]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](severity_files/figure-html/fig-Corr2-1.png){#fig-Corr2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr2-2.png){#fig-Corr2-2 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n\n\n:::\n\n\n### Type of vehicle usage {#sec-tele2}\n\nInstead of using the telematics device solely to measure vehicle usage, it is also possible to see if certain types of vehicle usage are indicators of a higher risk of claims. In this section, we will analyze certain telematics information that we classify as types of usage.\n\n::: {.panel-tabset}\n\n### Days\n\nOne pertinent piece of information is to investigate whether vehicle usage on certain days of the week predicts \na higher claim frequency. Seven covariates are available in the database, each indicating the percentage of \nvehicle usage on a particular day of the week. It is worth noting that the sum of the 7 percentages for each \ncontract equals 1. Thus, high vehicle usage on a Saturday corresponds to a high percentage of usage for that day,\nnecessarily implying that the other days will have smaller percentages.\n\nThe 7 graphs below illustrate the claim severity as a function of vehicle usage for each day of the week. \nThe results obtained for each day are similar and seem to indicate that uniform vehicle usage across all 7 days\n(i.e., 1/7 = 14.2%) is the riskiest situation. Thus, vehicle usage for each day appears to signify something, \nbut the information provided by these covariates likely needs transformation.\n\n\n\n::: {#fig-EachDay .cell layout-nrow=\"3\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndiv <- 1/15 \n\nvar <- 'Pct.drive.mon'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 6000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.tue'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 6000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.wed'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 8000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.thr'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 6000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.fri'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 20000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.sat'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 8000)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.sun'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  ylim(0, 8000)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Monday](severity_files/figure-html/fig-EachDay-1.png){#fig-EachDay-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Tuesday](severity_files/figure-html/fig-EachDay-2.png){#fig-EachDay-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Wednesday](severity_files/figure-html/fig-EachDay-3.png){#fig-EachDay-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Thursday](severity_files/figure-html/fig-EachDay-4.png){#fig-EachDay-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Friday](severity_files/figure-html/fig-EachDay-5.png){#fig-EachDay-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Saturday](severity_files/figure-html/fig-EachDay-6.png){#fig-EachDay-6 width=672}\n:::\n\n::: {.cell-output-display}\n![Sunday](severity_files/figure-html/fig-EachDay-7.png){#fig-EachDay-7 width=672}\n:::\n\nAverage claim severity vs. percentage of use for each day\n:::\n\n\n### Days (2)\n\nIn light of the results obtained from the analysis of vehicle usage for each day of the week, it is appropriate to create new variables that may better represent the risk. We thus create the following variables:  \n  \n1) A variable identifying the maximum value of vehicle usage for each day;  \n2) A variable identifying the minimum value of vehicle usage for each day;  \n3) A variable measuring the difference between the maximum and minimum values, which have just been calculated. This variable can thus identify insured individuals who use their vehicle more on specific days, or conversely, insured individuals who typically refrain from using their vehicle on certain days of the week.\n\nFor each of these variables, the graph representing the relationship between claim severity \nis illustrated below. All graphs do not seem to point to a significant result.\n\n\n::: {#fig-EachDay2 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf2 <- train %>%\n  mutate(max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin))\n\ndiv <- 1/25 \nvar <- 'max.day'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Maximum usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\ndiv <- 1/75 \nvar <- 'min.day'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Minimum usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\ndiv <- 1/25 \nvar <- 'max.min'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Difference between percentages',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Maximum Use](severity_files/figure-html/fig-EachDay2-1.png){#fig-EachDay2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Minimum Use](severity_files/figure-html/fig-EachDay2-2.png){#fig-EachDay2-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Difference between maximum and minimum use](severity_files/figure-html/fig-EachDay2-3.png){#fig-EachDay2-3 width=672}\n:::\n\nAverage claim severity vs. use for each day\n:::\n\n\n\n### Days (3)\n\nContinuing with the analysis related to the days of vehicle usage, two additional variables can also be explored:  \n  1) A variable identifying the day of the week when the vehicle is most used;\n2) A variable identifying the day of the week when the vehicle is least used.\n\nThe graphs below attempt to verify if the claim frequency differs for those who use their vehicle more or less on specific days of the week.  It is evident that Friday is the day when insured individuals tend to use their car more frequently. Conversely, Sunday is the day when the car appears to be used the least.\nNo significant results.\n\n\n::: {#fig-EachDay3 .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf2 <- train %>%\n  mutate(max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin))\n\ndf2$Dayformax <- factor(df2$Dayformax , levels=c(\"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"))\ndf2$Dayformin <- factor(df2$Dayformin , levels=c(\"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"))\n\n\ntemp <- df2 %>%\n  mutate(Var_ = Dayformax) %>%\n  group_by(Var_) %>%\n  summarize(msev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = msev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Number of claims')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n             inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype='Claim severity'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Day of the week',\n       y = 'Number of claims') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claim severity\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n\ntemp <- df2 %>%\n  mutate(Var_ = Dayformin) %>%\n  group_by(Var_) %>%\n  summarize(msev = mean(M_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(sev = msev/1)\n\ndiv <- min(temp$expo/temp$sev)/0.2\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Number of claims')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (sev)*div, group = 1), color='red', size=3,\n             inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (sev)*div, group = 1, linetype='Claim severity'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Day of the week',\n       y = 'Number of claims') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claim severity\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Day with the maximum use](severity_files/figure-html/fig-EachDay3-1.png){#fig-EachDay3-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Day with the minimum use](severity_files/figure-html/fig-EachDay3-2.png){#fig-EachDay3-2 width=672}\n:::\n\nClaim severity vs. sse for each day\n:::\n\n\n\n### Week-end\n\nA grouping of the vehicle usage variables for the days of the week has been performed directly in the database. \nThus, the usage percentages for the days from Monday to Friday have been summed, and the usage for Saturday and Sunday has been summed into another variable. \nKnowing that the two covariates are complementary (since the sum of both equals 100%), only one of the two variables needs to be kept. \nNo significant relationship.\n\n\n::: {#fig-weekweekend .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.wkday'\ndiv <- 1/25\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.wkend'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Week day](severity_files/figure-html/fig-weekweekend-1.png){#fig-weekweekend-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Weekend day](severity_files/figure-html/fig-weekweekend-2.png){#fig-weekweekend-2 width=672}\n:::\n\nAverage claim severity vs. percentage of use week day and week-end day\n:::\n\n\n### Trip Duration\n\nThe common explanation for claim probability highlights the use of highways. \nThe graphs of claim severity as a function of the percentage of trips exceeding 2, 3, or 4 hours are illustrated below.\nNo significant impact.\n\n\n::: {#fig-HrDrive .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.2hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.3hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.4hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![2 hours](severity_files/figure-html/fig-HrDrive-1.png){#fig-HrDrive-1 width=672}\n:::\n\n::: {.cell-output-display}\n![3 hours](severity_files/figure-html/fig-HrDrive-2.png){#fig-HrDrive-2 width=672}\n:::\n\n::: {.cell-output-display}\n![4 hours](severity_files/figure-html/fig-HrDrive-3.png){#fig-HrDrive-3 width=672}\n:::\n\nAverage claim severity vs. percentage of vehicule driven by XX hours\n:::\n\n\n### Rush hours\n\nAnother common hypothesis links the frequency of automobile insurance claims to traffic congestion. \nThus, the proportion of trips made in traffic jams, whether in the morning or evening, is also available \nin the database. The graphs of severity linked to these two variables are illustrated below.\nNo significant impact.\n\n\n::: {#fig-Rush .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.rush.am'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.rush.pm'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![AM Rush](severity_files/figure-html/fig-Rush-1.png){#fig-Rush-1 width=672}\n:::\n\n::: {.cell-output-display}\n![PM Rush](severity_files/figure-html/fig-Rush-2.png){#fig-Rush-2 width=672}\n:::\n\nAverage claim severity vs. Percentage of vehicule driven during rush hours\n:::\n\n\n### Correlation\n\nThe dependency between each studied covariate is illustrated below. \n\n\n::: {#fig-Corr3 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain2 <- train %>%\n  mutate(Miles.per.day = Total.miles.driven/Duration,\n         max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin),\n         expo = Duration/365.25)\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Pct.drive.mon\", \"Pct.drive.tue\", \"Pct.drive.wed\", \"Pct.drive.thr\", \"Pct.drive.fri\", \"Pct.drive.sat\", \"Pct.drive.sun\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:12, 6:12]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:12]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"max.day\", \"min.day\", \"Dayformax\", \"Dayformin\", \"Pct.drive.wkend\", \n                \"Pct.drive.2hrs\", \"Pct.drive.3hrs\", \"Pct.drive.4hrs\",\n                \"Pct.drive.rush.am\", \"Pct.drive.rush.pm\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:15, 6:15]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:15]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](severity_files/figure-html/fig-Corr3-1.png){#fig-Corr3-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr3-2.png){#fig-Corr3-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Telematic covariates](severity_files/figure-html/fig-Corr3-3.png){#fig-Corr3-3 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr3-4.png){#fig-Corr3-4 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n\n\n:::\n  \n### Driving behavior {#sec-tele3}\n  \nBeyond the intensity of vehicle usage, telematics devices also allow for the compilation of various statistics on driving behavior. This primarily includes sudden braking, rapid acceleration, or high-speed turns (both left and right). In this final part of the analysis of segmentation variables available in the database, we will therefore work on analyzing and transforming these variables.\n\n::: {.panel-tabset}\n\n### Brakes\n\nIn the database, we have access to a series of variables counting the number of abrupt braking events, \nwith decelerations of 6mph, 8mph, 9mph, 11mph, 12mph, and 14mph per 1000 miles traveled. \nAs indicated in the description, the number of abrupt braking events is normalized by the \ndistance traveled and not by the number of insured days. \nSince we choose to use the number of insured days as a measure of exposure to risk, \na transformation of these variables is necessary.\n\n\nThe 6 graphs below illustrate the relationship between the number of daily abrupt braking events and claim severity.\nFor the first 4 scenarios, a weak relationship can be observed.\n\n\n\n::: {#fig-Brake .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Brake.06miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.08miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.09miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Brake.11miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.12miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.14miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Brakes of 6 mph](severity_files/figure-html/fig-Brake-1.png){#fig-Brake-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 8 mph](severity_files/figure-html/fig-Brake-2.png){#fig-Brake-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 9 mph](severity_files/figure-html/fig-Brake-3.png){#fig-Brake-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 11 mph](severity_files/figure-html/fig-Brake-4.png){#fig-Brake-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 12 mph](severity_files/figure-html/fig-Brake-5.png){#fig-Brake-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 14 mph](severity_files/figure-html/fig-Brake-6.png){#fig-Brake-6 width=672}\n:::\n\nAverage claim severity vs. Average number of brakes\n:::\n\n\n\n### Accelerations\n\nSimilarly to braking events, we need to convert accelerations, which are normalized by miles driven, into average daily accelerations. \nThe 6 graphs below illustrate the relationship between the average acceleration and claim severity.\n\nNo significant impact.\n\n\n::: {#fig-Accel .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Accel.06miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.08miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.09miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.11miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.12miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.14miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Accelerations of 6 mph](severity_files/figure-html/fig-Accel-1.png){#fig-Accel-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 8 mph](severity_files/figure-html/fig-Accel-2.png){#fig-Accel-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 9 mph](severity_files/figure-html/fig-Accel-3.png){#fig-Accel-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 11 mph](severity_files/figure-html/fig-Accel-4.png){#fig-Accel-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 12 mph](severity_files/figure-html/fig-Accel-5.png){#fig-Accel-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 14 mph](severity_files/figure-html/fig-Accel-6.png){#fig-Accel-6 width=672}\n:::\n\nAverage claim severity vs. Average number of accelerations\n:::\n\n\n### Right turns\n\nNo clear impact.\n\n\n::: {#fig-Right .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Right.turn.intensity08'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity09'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity10'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity11'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity12'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Right turns of 8 mph](severity_files/figure-html/fig-Right-1.png){#fig-Right-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 9 mph](severity_files/figure-html/fig-Right-2.png){#fig-Right-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 10 mph](severity_files/figure-html/fig-Right-3.png){#fig-Right-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 11 mph](severity_files/figure-html/fig-Right-4.png){#fig-Right-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 12 mph](severity_files/figure-html/fig-Right-5.png){#fig-Right-5 width=672}\n:::\n\nAverage claim severity vs. Average number of right turns\n:::\n\n\n\n\n### Left turns\nNo clear impact.\n\n\n::: {#fig-Left .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Left.turn.intensity08'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity09'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity10'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity11'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity12'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(M_Claim=mean(M_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(sev = M_Claim/1) %>%\n  ggplot(aes(x=Group, y=sev)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claim severity') +\n  guides(size = guide_legend(title = \"Number of claims\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Left turns of 8 mph](severity_files/figure-html/fig-Left-1.png){#fig-Left-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 9 mph](severity_files/figure-html/fig-Left-2.png){#fig-Left-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 10 mph](severity_files/figure-html/fig-Left-3.png){#fig-Left-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 11 mph](severity_files/figure-html/fig-Left-4.png){#fig-Left-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 12 mph](severity_files/figure-html/fig-Left-5.png){#fig-Left-5 width=672}\n:::\n\nAverage claim severity vs. Average number of left turns\n:::\n\n\n### Correlation\n\n\n\n\n::: {#fig-Corr4 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain2 <- train %>%\n  mutate(Miles.per.day = Total.miles.driven/Duration,\n         max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin),\n         expo = Duration/365.25)\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Accel.06miles\", \"Accel.08miles\", \"Accel.09miles\", \"Accel.11miles\", \"Accel.12miles\", \"Accel.14miles\", \n               \"Brake.06miles\", \"Brake.08miles\", \"Brake.09miles\", \"Brake.11miles\", \"Brake.12miles\", \"Brake.14miles\", \n               \"Left.turn.intensity08\", \"Left.turn.intensity09\", \"Left.turn.intensity10\", \"Left.turn.intensity11\", \"Left.turn.intensity12\",\n               \"Right.turn.intensity08\", \"Right.turn.intensity09\", \"Right.turn.intensity10\", \"Right.turn.intensity11\", \"Right.turn.intensity12\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:17, 6:17]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:17]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\n\ncorr1 <- correlation_matrix[18:27, 18:27]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 18:27]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](severity_files/figure-html/fig-Corr4-1.png){#fig-Corr4-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr4-2.png){#fig-Corr4-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Telematic covariates](severity_files/figure-html/fig-Corr4-3.png){#fig-Corr4-3 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](severity_files/figure-html/fig-Corr4-4.png){#fig-Corr4-4 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n:::\n\n\n\n\n\n",
    "supporting": [
      "severity_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}