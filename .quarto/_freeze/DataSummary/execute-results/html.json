{
  "hash": "6366a4efb8464cbcc36693698f6bd15c",
  "result": {
    "markdown": "# Data Summary\n\n## Preamble\n\n::: {.panel-tabset}\n\n### Chapter Objective\n\nBefore delving into the development of more advanced statistical models for variable selection and parameter estimation, it is pertinent to analyze all the covariates available in the dataset used for this study. An individual and more in-depth analysis will thus be conducted for each of these segmentation variables. This approach will notably allow:  \n\n  1) Better understanding of how these covariates could explain the risk of accidents;  \n  2) Proposing transformations or groupings of modalities.\n\nWe will cover all segmentation variables available in the database. We have divided the variables into different categories:\n\n  1) @sec-vartrad: Traditional covariates:  \n    - @sec-duration: Contract duration,   \n    - @sec-sensibles: Sensitive information,  \n    - @sec-vtautres: Others.  \n  2) @sec-vartele: Telematic covariates:  \n    - @sec-tele1: Vehicle usage level,  \n    - @sec-tele2: Type of vehicle usage,  \n    - @sec-tele3: Quality of driving.   \n\nIt is crucial to emphasize that the covariates under study will all exhibit strong correlations among themselves. For instance, younger insured individuals will likely have different credit score distributions compared to older insured individuals, male driving behaviors may differ from female driving behaviors, or the total distance traveled by an insured individual will be linked to the duration of his contract. Thus, the marginal impact of each segmentation variable may partly be explained by the effects induced by other covariates. \n\n\n### Packages\n\nHere is the list of packages that will be used:\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(vtable)\nlibrary(rpart)\nlibrary(repr)\nlibrary(rpart.plot)\nlibrary(rfCountData)\nlibrary(gam)\n```\n:::\n\n\n### Data\n\nThe following R script loads the available data. The database has been divided into a train portion containing 80\\% of the original synthetic data, and the remaining 20\\% of the synthetic data has been placed in a test database.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ndataS <- read.csv('Data/Synthetic.csv')\n\n# Modifications \ndataS <- dataS %>%\n  mutate(Territory = as.factor(Territory)) %>%\n  select(-c('Annual.pct.driven', 'Annual.miles.drive'))\n\ndata.select <- dataS\n\n# Train-test et folds\nset.seed(123)\ntrain <- data.select %>% sample_frac(0.8, replace = FALSE)\ntest <- data.select %>% anti_join(train)\n```\n:::\n\n\n\n:::\n\n\n## Traditional covariates {#sec-vartrad}\n\n### Contract duration {#sec-duration}\n\nSpecial attention should be given to the variable representing the duration of the contract. In traditional ratemaking models based on count distributions, such as the Poisson distribution, it is usually assumed that the duration of the contract is an offset variable rather than a covariate for which a parameter needs to be estimated. For example, when using an offset variable, if an insured individual is covered for only half of the year, the insurer will offer him a premium that is half the size of what it would be for full-year coverage. Some papers question this approach and introduce contract duration as a covariate ([@boucher2007duration; @duval1; @DUV23]), suggesting that an insured individual covered for half the year should have a premium that is either larger or smaller than half of that for a full year.\n\nTo stimulate further thought, the numerical analysis below visualizes the average number of claims observed based on groupings of the duration of the contract. Although an increase in the number of claims based on the duration of the contract may be observed, it can be noted that the relationship is not perfectly linear compared to the dashed line. To remain consistent with traditional pricing approaches, we will however keep the duration of the contract as a measure of exposure to risk for now. However, with the telematics information available, the distance driven is also available and could be an alternative to consider for representing exposure to risk in automobile insurance. We will discuss this situation in Section @sec-tele1.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/366, \n                Duration.group = ceiling(Duration.y/0.05) * 0.05) %>%\n  group_by(Duration.group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            nb=n()) %>% \n  mutate(freq = NB_Claim/nb) %>%\n  ggplot(aes(x=Duration.group, y=freq)) + \n  geom_point(aes(size=nb), color='black') + \n  #geom_smooth(aes(weight = nb),se=F) + \n  labs(x = 'Contract Duration',\n       y = 'Average Nnumber of Claims') +\n  geom_segment(aes(x = 0, y = 0, xend = 1, yend = max(freq)), linetype='dashed')+\n  guides(size = guide_legend(title = \"Number of contracts\")) +\n  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Average number of claims vs. contract duration](DataSummary_files/figure-html/fig-Duration-1.png){#fig-Duration width=864}\n:::\n:::\n\n\n### Sensitive information {#sec-sensibles}\n\n::: {.panel-tabset}\n\n### Credit score \n\nWe conduct the same exercise as for the duration of the contract, but this time with the credit score. In the graph below, we can observe the distribution of the credit score in the insurance portfolio: the points indicate the observed claims frequency, the size of the points measures the total exposures for each group, and a trend curve (in red) for the frequency has been added.  Thus, we can see that the relationship between the number of claims and the credit score is not linear, but generally, a better credit score implies a lower Claims frequency. \n\nThe link between the frequency of auto insurance claims and credit scores has been previously examined. Referring to [@wu2003does], it was concluded that this relationship persists even after controlling for numerous other variables.  Despite the statistical association between claims experience and credit score, establishing causality remains elusive. Some argue that a correlation exists between responsible financial behavior and safe driving, or that individuals with higher credit scores may have easier access to newer vehicles equipped with better safety features, potentially reducing accident risk. However, these explanations lack conviction: the use of credit scoring appears to target young drivers lacking established credit histories, new immigrants, or generally economically disadvantaged populations. Coupled with the opacity of credit score calculation by private entities, it is reasonable to view credit score as a sensitive variable warranting scrutiny in automobile pricing.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Credit.score/25) * 25) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + \n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Credit Score',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n#  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. credit score](DataSummary_files/figure-html/fig-CreditScore-1.png){#fig-CreditScore width=864}\n:::\n:::\n\n\n\n### Age of the insured\n\nJust like the credit score, the age of the insured is a sensitive variable in ratemaking. The graph below illustrates the relationship between the age of the insured individual and their Claims frequency. A fairly strong relationship between the age of the insured individual and the Claims frequency can be observed.\n\nAs discussed earlier in this project, age is a controversial segmentation variable. Indeed, one might argue that there is no causal relationship between age and the likelihood of having an accident, and that age is rather used to identify drivers who may lack driving experience, who could be more reckless, and who might be less mature.  We can expect that driving behavior measured by telematics devices could better identify such drivers.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Insured.age/3) * 3) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) + \n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Age of the insured',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n#  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. age of the insured](DataSummary_files/figure-html/fig-InsuredAge-1.png){#fig-InsuredAge width=864}\n:::\n:::\n\n\n### Sex of the insured\n\nThe graph below shows the distribution of the insured individual's gender in the portfolio (in bars), as well as the observed Claims frequency for each of the two groups (in red). It can be seen that there are more men in the portfolio. It can also be observed that the Claims frequency for both men and women is highly similar. Using the Welch two sample t-test, we obtain a $p$-value of $0.2705$ meaning that the null hypothesis, the true difference in means is equal to $0$, cannot be rejected.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Insured.sex) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/1.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Total Exposures\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype = \"Claims Frequency\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Sex of the insured',\n       y = 'Total exposures') +\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. sex of the insured](DataSummary_files/figure-html/fig-InsuredSex-1.png){#fig-InsuredSex width=864}\n:::\n:::\n\n\n\n### Marital Status\n\nThe marital status of the insured individual is not one of the most important segmentation variables. However, a statistical test rejects the null hypothesis (the true difference in means is equal to $0$), so we keep this variable in our analysis. The graph below shows the number of insured individuals in each category and the observed claim frequency.\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Marital) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.8\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Total Exposures\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype = \"Claims Frequency\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Marital status of the insured',\n       y = 'Total exposures') +\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. marital status of the insured](DataSummary_files/figure-html/fig-Marital-1.png){#fig-Marital width=864}\n:::\n:::\n\n\n### Insured's territory\n\nThe pricing of automobile insurance based on territory usage is common in many insurance companies worldwide. This approach relies on the principle that the risk incurred by a driver may vary depending on the geographical location where they most frequently drive. Thus, insurers may assess the risks associated with different geographical areas, considering traffic density, crime rates, weather conditions, and road quality. In practice, territories in automobile insurance are often chosen based on practical criteria such as blocks of streets, the same postal code, and divisions created by a river or highway.\n\nTherefore, while using territory in automobile insurance pricing may seem like an objective method for evaluating risks, it can also have significant social implications. Indeed, it has been shown that this approach can contribute to dividing population groups based on criteria such as race, economic level, or even profession. For example, disadvantaged or ethnically predominant urban neighborhoods are often grouped in one territory, while another more affluent neighborhood is associated with a different territory. By segmenting the portfolio according to territory, insurers often price based on socio-economic criteria.\n\nIn order to protect the privacy of the insured individuals in the database, their specific addresses and postal codes are not available. Instead, a variable known as \"territory\" is used, which is represented by a numerical value ranging from $11$ to $91$. However, this numerical representation makes it challenging to interpret or correlate with current public data. The graph below demonstrates the influence of territory on the modeling of claim numbers. \nUpon analysis, we find that territory does not have a significant impact on claim frequency, except for category $54$. In the absence of this category, a statistical test known as the F test fails to reject the null hypothesis, indicating that territory has no effect on the response variable (with a $p$-value of $0.064$). However, due to the abstract nature of the *Territory* variable, it is challenging to interpret its influence or relate it to current public data.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Territory) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.4\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype = \"Total Exposures\")) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=1.5,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype = \"Claims Frequency\"), color='red', size=0.7,\n            inherit.aes = FALSE) +\n  labs(x = 'Territory',\n       y = 'Total exposures') +\n  scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) +\n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. territory](DataSummary_files/figure-html/fig-Terr-1.png){#fig-Terr width=864}\n:::\n:::\n\n\n### Correlation\n\nThe correlation matrix below indicates the level of dependence between each of the sensitive variables. For instance, it can be observed that the insured's age is correlated with the credit score and marital status.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\")\n\ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\nplt <- ggplot(data = as.data.frame(as.table(correlation_matrix)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=10, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 10),\n          plot.title = element_text(size = 10),   # Adjust plot title font size\n          legend.text = element_text(size = 10),\n          legend.title = element_text(size=10))\nprint(plt)\n```\n\n::: {.cell-output-display}\n![Correlation between sensible covariates](DataSummary_files/figure-html/fig-Corr0-1.png){#fig-Corr0 width=672}\n:::\n:::\n\n\n\n:::\n\n\n### Other covariates {#sec-vtautres}\n\nOther traditional segmentation variables are also available in the database. Unlike the variables we have just covered, these other traditional segmentation variables are not sensitive and are socially accepted in automobile pricing.\n\n::: {.panel-tabset}\n\n### Age of the car\n\nThe graph below highlights the relationship between claim frequency and the age of the vehicle. A fairly clear link is observed: the newer a vehicle is, the higher its risk of having an insurance claim.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Car.age/1) * 1) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Age of the car',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n#  xlim(0,1)+ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. age of the car](DataSummary_files/figure-html/fig-CarAge-1.png){#fig-CarAge width=864}\n:::\n:::\n\n\n\n### Use of the car\n\nIn the data used, vehicle usage has been categorized into 4 levels: commercial, commute, farm, and private. We can observe some difference in the average number of claims between each of the categories, as illustrated in the graph below. It is also important to note a significant difference in the distribution of this variable: the vast majority of insured individuals are in the commute and private groups. Thus, even if the claim frequency of insured individuals in the commercial and farm groups differs, the small number of contracts in these groups likely limits the predictive capacity of this variable.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Car.use) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.07\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Total Exposures')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype = 'Claims Frequency'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Use of the car',\n       y = 'Total exposures') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\"))  + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. use of the car](DataSummary_files/figure-html/fig-CarUse-1.png){#fig-CarUse width=864}\n:::\n:::\n\n\n### Region\n\nIn addition to territory, a slightly coarser grouping of the insured individual's residence has been made for insurance contracts. Indeed, there are two main regions: urban and rural. The difference in claims between these two types of insured individuals is illustrated in the graph below. According to the Welch Two Sample t-test, the difference in means is significant ($p$-value very close to $0$).\n\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntemp <- train %>%\n  mutate(Var_ = Region) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Total Exposures')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype='Claims Frequency'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Region',\n       y = 'Total exposures') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. region](DataSummary_files/figure-html/fig-Region-1.png){#fig-Region width=864}\n:::\n:::\n\n\n\n### Years without Claim\n\nThe variable tracking the number of claim-free years is also crucial in modeling risk in automobile insurance. According to various papers, including [@lemaire1985, ch.7], this variable is considered particularly significant to the extent that if only one segmentation variable were to be used in ratemaking, it would likely be something related to the insured's experience.\n\nThe graph below illustrates the relationship between the number of claim-free years and the number of reported automobile claims. As indicated by numerous studies, a decreasing relationship can be observed, suggesting that insured individuals who have had few or no claims in the past are also likely to make fewer claims in the future.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = pmin(Years.noclaims, 60)) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Years without claim',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(0, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Observed claims frequency vs. years without claim](DataSummary_files/figure-html/fig-YWC-1.png){#fig-YWC width=864}\n:::\n:::\n\n\n### Correlation\n\nBelow, we can observe the correlation that exists between the traditional segmentation variables. On the left, we have a correlation matrix indicating a strong dependency between vehicle usage and the number of claim-free years. On the right, emphasis is placed on the relationship between the covariates studied in this subsection and the sensitive variables. Thus, a strong dependency between the age of the insured and the number of claim-free years can be observed. Vehicle usage is also linked to the age of the insured.\n\n\n::: {#fig-Corr .cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Car.use\", \"Region\", \"Car.age\", \"Years.noclaims\")\n\ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:9, 6:9]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:9]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Other traditionnal covariates](DataSummary_files/figure-html/fig-Corr-1.png){#fig-Corr-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr-2.png){#fig-Corr-2 width=672}\n:::\n\nCorrelation between traditional covariates\n:::\n\n\n\n:::\n\n\n## Telematic covariates {#sec-vartele}\n\n### Vehicle usage level {#sec-tele1}\n\nMany scientific articles have shown that what appeared to be most relevant as telematic information for pricing was not the quality of driving, but rather the level of vehicle usage. In this first part of the telematics variable analysis, we will therefore focus on these variables.\n\n::: {.panel-tabset}\n\n### Annual Miles Driven\n\nIn addition to the declared distance, we also have access to the actual distance traveled by the insured through the telematics device installed in the vehicle.It is increasingly recognized that the distance driven in a car can constitute a more precise measure of risk exposure than simply the duration of the insurance contract. Indeed, the frequency and distance of trips are crucial factors in the likelihood of an accident occurring. For example, one might assume that a driver who regularly covers long distances is statistically more likely to be involved in an accident than a driver who uses their vehicle sporadically, even if both have the same duration of insurance contract.\n\nThe graph below illustrates the claim frequency as a function of the distance driven. Although there appears to be a proportional relationship between the distance driven and the number of claims, there is also a decrease in claim frequency for drivers who have driven extensively. This decreasing frequency relationship for heavy drivers has been observed in other scientific research (see Cote and Boucher or Turcotte).\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ifelse(Total.miles.driven < 20000, ceiling(Total.miles.driven/1000) * 1000, ceiling(Total.miles.driven/5000) * 5000)) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Total miles driven',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  xlim(0,40000)+\n  ylim(0, 0.34)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Claims Frequency vs. yotal miles driven](DataSummary_files/figure-html/fig-MilesDriveb-1.png){#fig-MilesDriveb width=864}\n:::\n:::\n\n\n\n### Contract duration revisited\n\nA form of competition between the duration of the contract and the distance driven (measured) appears to emerge as the adequate measure of risk exposure. While distance driven should be more predictive, the duration of the contract exhibits a more consistent relationship with claim frequency, resembling what risk exposure should entail. We thus propose creating a new covariate for our analysis: the average number of kilometers traveled per day. This new variable will solely correspond to the ratio of the total number of kilometers traveled divided by the duration of the contract.\n\nThis new variable can represent a form of driving activity intensity. By replacing the total kilometers traveled with the average daily kilometers, we can revert to the duration of the contract as the classical measure of risk exposure. The graphs below illustrate the relationship between daily miles and claim frequency.\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Miles.per.day = Total.miles.driven/Duration, \n                Duration.y = Duration/365.25, \n                Group = ceiling(Miles.per.day/7.5) * 7.5) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average miles driven per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  xlim(0,127.5)+\n  #ylim(0, 0.31)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Claims Frequency vs. average miles driven per day](DataSummary_files/figure-html/fig-AveMilesDriveb-1.png){#fig-AveMilesDriveb width=864}\n:::\n:::\n\n\n### Days per week\n\nAnother intensity measure that may be close to the usage percentage is the average number of vehicle uses per week. The graph below shows the relationship between claim frequency and this variable. An increase in claim frequency is observed as the number of days used increases. However, it can also be seen that insured individuals who use their car an average of 7 days per week appear to deviate from the general trend.\n\n\n\n::: {.cell layout-ncol=\"1\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(Avgdays.week/0.5) * 0.5) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of days per week',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(0, 0.31)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Claims Frequency vs. average number of days per week the car is used](DataSummary_files/figure-html/fig-AveNum-1.png){#fig-AveNum width=864}\n:::\n:::\n\n\n\n### Correlation\n\nOnce again, we can observe the dependency between the covariates by looking at the results below. It's interesting to note that mean number of days used is linked to the age of the insured, for example.\n\n\n::: {#fig-Corr2 .cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Miles.per.day\", \"Avgdays.week\")\n\ntrain <- train %>%\n  dplyr::mutate(Miles.per.day = Total.miles.driven/Duration)\n                \ndata = data.matrix(train[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:7, 6:7]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:7]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](DataSummary_files/figure-html/fig-Corr2-1.png){#fig-Corr2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr2-2.png){#fig-Corr2-2 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n\n\n\n:::\n\n### Type of vehicle usage {#sec-tele2}\n\nInstead of using the telematics device solely to measure vehicle usage, it is also possible to see if certain types of vehicle usage are indicators of a higher risk of claims. In this section, we will analyze certain telematics information that we classify as types of usage.\n\n::: {.panel-tabset}\n\n### Days\n\nOne pertinent piece of information is to investigate whether vehicle usage on certain days of the week predicts a higher claim frequency. Seven covariates are available in the database, each indicating the percentage of vehicle usage on a particular day of the week. It is worth noting that the sum of the 7 percentages for each contract equals 1. Thus, high vehicle usage on a Saturday corresponds to a high percentage of usage for that day, necessarily implying that the other days will have smaller percentages.\n\nThe 7 graphs below illustrate the claim frequency as a function of vehicle usage for each day of the week. The results obtained for each day are similar and seem to indicate that uniform vehicle usage across all 7 days (i.e., 1/7 = 14.2%) is the riskiest situation. Thus, vehicle usage for each day appears to signify something, but the information provided by these covariates likely needs transformation.\n\n\n\n::: {#fig-EachDay .cell layout-nrow=\"3\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndiv <- 1/15 \n\nvar <- 'Pct.drive.mon'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.tue'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.wed'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.thr'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.fri'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.sat'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.sun'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=F, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Monday](DataSummary_files/figure-html/fig-EachDay-1.png){#fig-EachDay-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Tuesday](DataSummary_files/figure-html/fig-EachDay-2.png){#fig-EachDay-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Wednesday](DataSummary_files/figure-html/fig-EachDay-3.png){#fig-EachDay-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Thursday](DataSummary_files/figure-html/fig-EachDay-4.png){#fig-EachDay-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Friday](DataSummary_files/figure-html/fig-EachDay-5.png){#fig-EachDay-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Saturday](DataSummary_files/figure-html/fig-EachDay-6.png){#fig-EachDay-6 width=672}\n:::\n\n::: {.cell-output-display}\n![Sunday](DataSummary_files/figure-html/fig-EachDay-7.png){#fig-EachDay-7 width=672}\n:::\n\nClaims Frequency vs. percentage of use for each day\n:::\n\n\n### Days (2)\n\nIn light of the results obtained from the analysis of vehicle usage for each day of the week, it is appropriate to create new variables that may better represent the risk. We thus create the following variables:  \n\n  1) A variable identifying the maximum value of vehicle usage for each day;  \n  2) A variable identifying the minimum value of vehicle usage for each day;  \n  3) A variable measuring the difference between the maximum and minimum values, which have just been calculated. This variable can thus identify insured individuals who use their vehicle more on specific days, or conversely, insured individuals who typically refrain from using their vehicle on certain days of the week.\n\nFor each of these variables, the graph representing the relationship between claim frequency is illustrated below. While the graph for the maximum use does not seem to point to a significant result in explaining claim frequency, it appears that the two other graphs are more interesting: insured individuals who use their vehicle equally on all days of the week display a higher claim frequency than those who use their vehicle more on certain days. \n\n\n::: {#fig-EachDay2 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf2 <- train %>%\nmutate(max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n       min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n       max.min = max.day - min.day,\n       Dayformax = 'Monday', \n       Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n       Dayformin = 'Monday', \n       Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin))\n\ndiv <- 1/25 \nvar <- 'max.day'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Maximum usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\ndiv <- 1/75 \nvar <- 'min.day'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Minimum usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\ndiv <- 1/25 \nvar <- 'max.min'\ndf2 %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Difference between percentages',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Maximum Use](DataSummary_files/figure-html/fig-EachDay2-1.png){#fig-EachDay2-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Minimum Use](DataSummary_files/figure-html/fig-EachDay2-2.png){#fig-EachDay2-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Difference between maximum and minimum use](DataSummary_files/figure-html/fig-EachDay2-3.png){#fig-EachDay2-3 width=672}\n:::\n\nClaims Frequency vs. use for each day\n:::\n\n\n\n### Days (3)\n\nContinuing with the analysis related to the days of vehicle usage, two additional variables can also be explored:  \n  1) A variable identifying the day of the week when the vehicle is most used;\n  2) A variable identifying the day of the week when the vehicle is least used.\n\nThe graphs below attempt to verify if the claim frequency differs for those who use their vehicle more or less on specific days of the week.  It is evident that Friday is the day when insured individuals tend to use their car more frequently. Conversely, Sunday is the day when the car appears to be used the least.\n\nFor the claims frequency, two days appear to be slightly more significant than the others:  \n\n  - **Thursday**: Insured individuals who use their vehicle most frequently on Thursdays have a higher claim frequency, while those who use their vehicle less on Thursdays have a lower claim frequency.\n  - **Sunday**: Insured individuals who use their vehicle most frequently on Sundays have a lower claim frequency, while those who use their vehicle less on Sundays have a higher claim frequency.\n\n\n\n::: {#fig-EachDay3 .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ndf2 <- train %>%\nmutate(max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n       min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n       max.min = max.day - min.day,\n       Dayformax = 'Monday', \n       Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n       Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n       Dayformin = 'Monday', \n       Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n       Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin))\n\ndf2$Dayformax <- factor(df2$Dayformax , levels=c(\"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"))\ndf2$Dayformin <- factor(df2$Dayformin , levels=c(\"Monday\",\"Tuesday\",\"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"))\n\n\ntemp <- df2 %>%\n  mutate(Var_ = Dayformax) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.5\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Total Exposures')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype='Claims Frequency'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Day of the week',\n       y = 'Total exposures') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n\ntemp <- df2 %>%\n  mutate(Var_ = Dayformin) %>%\n  group_by(Var_) %>%\n  summarize(nbclaim = sum(NB_Claim),\n            expo = sum(Duration/365.25)) %>%\n  mutate(freq = nbclaim/expo)\n\ndiv <- min(temp$expo/temp$freq)/0.2\n\nggplot(data = temp, aes(x = Var_, y = expo, linetype='Total Exposures')) + #start plot by by plotting bars\n  geom_bar(stat = \"identity\", alpha=0.5) + \n  geom_point(data = temp, aes(x = Var_, y = (freq)*div, group = 1), color='red', size=3,\n            inherit.aes = FALSE) +\n  geom_line(data = temp, aes(x = Var_, y = (freq)*div, group = 1, linetype='Claims Frequency'), color='red', size=0.7,\n            inherit.aes = FALSE) +\n    labs(x = 'Day of the week',\n       y = 'Total exposures') +\n  #scale_x_discrete(labels = NULL, breaks = NULL)+\n  scale_y_continuous(sec.axis = sec_axis(~./div, name = \"Claims frequency\")) + \n  guides(linetype=guide_legend(title=\"\")) +\n  theme_classic()+\n  theme(legend.position = 'bottom', legend.direction = \"horizontal\")\n```\n\n::: {.cell-output-display}\n![Day with the maximum use](DataSummary_files/figure-html/fig-EachDay3-1.png){#fig-EachDay3-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Day with the minimum use](DataSummary_files/figure-html/fig-EachDay3-2.png){#fig-EachDay3-2 width=672}\n:::\n\nClaims Frequency vs. sse for each day\n:::\n\n\n\n### Week-end\n\nA grouping of the vehicle usage variables for the days of the week has been performed directly in the database. Thus, the usage percentages for the days from Monday to Friday have been summed, and the usage for Saturday and Sunday has been summed into another variable. Knowing that the two covariates are complementary (since the sum of both equals 100%), only one of the two variables needs to be kept. The two graphs below indeed show the same behavior, but in opposite directions.\n\nThe final result obtained is similar to what we observed for the individual days of the week, and it is unclear whether these covariates will remain important in the final analysis.\n\n\n\n::: {#fig-weekweekend .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.wkday'\ndiv <- 1/25\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.wkend'\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25, \n                Group = ceiling(get(var)/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Usage percentage per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Week day](DataSummary_files/figure-html/fig-weekweekend-1.png){#fig-weekweekend-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Weekend day](DataSummary_files/figure-html/fig-weekweekend-2.png){#fig-weekweekend-2 width=672}\n:::\n\nClaims Frequency vs. percentage of use week day and week-end day\n:::\n\n\n### Trip Duration\n\nThe common explanation for claim probability highlights the use of highways. According to several studies, the risk of an accident per kilometer traveled is much lower on highways than in urban areas. Thus, the duration of each trip, or the percentage of trips exceeding a certain predetermined duration, could be relevant to analyze. The graphs of claim frequency as a function of the percentage of trips exceeding 2, 3, or 4 hours are illustrated below.\n\nDespite the intuition that this kind of information could be relevant, the graphs do not seem to show a particularly strong link between the proportion of long trips and claim frequency.\n\n\n::: {#fig-HrDrive .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.2hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.3hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Pct.drive.4hrs'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![2 hours](DataSummary_files/figure-html/fig-HrDrive-1.png){#fig-HrDrive-1 width=672}\n:::\n\n::: {.cell-output-display}\n![3 hours](DataSummary_files/figure-html/fig-HrDrive-2.png){#fig-HrDrive-2 width=672}\n:::\n\n::: {.cell-output-display}\n![4 hours](DataSummary_files/figure-html/fig-HrDrive-3.png){#fig-HrDrive-3 width=672}\n:::\n\nClaims Frequency vs. percentage of vehicule driven by XX hours\n:::\n\n\n### Rush hours\n\nAnother common hypothesis links the frequency of automobile insurance claims to traffic congestion. Thus, the proportion of trips made in traffic jams, whether in the morning or evening, is also available in the database. The graphs of frequency linked to these two variables are illustrated below.\n\nSimilar to the duration of trips, the hypothesis does not seem to be validated by statistical analysis, and it is not clear whether these variables are relevant for explaining the risk of accidents.\n\n\n::: {#fig-Rush .cell layout-nrow=\"1\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Pct.drive.rush.am'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Pct.drive.rush.pm'\n\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Percent of driving',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![AM Rush](DataSummary_files/figure-html/fig-Rush-1.png){#fig-Rush-1 width=672}\n:::\n\n::: {.cell-output-display}\n![PM Rush](DataSummary_files/figure-html/fig-Rush-2.png){#fig-Rush-2 width=672}\n:::\n\nClaims Frequency vs. Percentage of vehicule driven during rush hours\n:::\n\n\n\n### Correlation\n\nThe dependency between each studied covariate is illustrated below. It's interesting to note the apparent link between vehicle usage and the age of the insured.\n\n\n::: {#fig-Corr3 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain2 <- train %>%\n  mutate(Miles.per.day = Total.miles.driven/Duration,\n         max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin),\n         expo = Duration/365.25)\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Pct.drive.mon\", \"Pct.drive.tue\", \"Pct.drive.wed\", \"Pct.drive.thr\", \"Pct.drive.fri\", \"Pct.drive.sat\", \"Pct.drive.sun\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:12, 6:12]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:12]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"max.day\", \"min.day\", \"Dayformax\", \"Dayformin\", \"Pct.drive.wkend\", \n                \"Pct.drive.2hrs\", \"Pct.drive.3hrs\", \"Pct.drive.4hrs\",\n                \"Pct.drive.rush.am\", \"Pct.drive.rush.pm\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:15, 6:15]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:15]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](DataSummary_files/figure-html/fig-Corr3-1.png){#fig-Corr3-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr3-2.png){#fig-Corr3-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Telematic covariates](DataSummary_files/figure-html/fig-Corr3-3.png){#fig-Corr3-3 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr3-4.png){#fig-Corr3-4 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n\n\n\n:::\n\n### Driving behavior {#sec-tele3}\n\nBeyond the intensity of vehicle usage, telematics devices also allow for the compilation of various statistics on driving behavior. This primarily includes sudden braking, rapid acceleration, or high-speed turns (both left and right). In this final part of the analysis of segmentation variables available in the database, we will therefore work on analyzing and transforming these variables.\n\n::: {.panel-tabset}\n\n### Brakes\n\nIn the database, we have access to a series of variables counting the number of abrupt braking events, with decelerations of 6mph, 8mph, 9mph, 11mph, 12mph, and 14mph per 1000 miles traveled. As indicated in the description, the number of abrupt braking events is normalized by the distance traveled and not by the number of insured days. Since we choose to use the number of insured days as a measure of exposure to risk, a transformation of these variables is necessary.\n\nBy multiplying the number of abrupt braking events by 1000 miles per thousand miles traveled, we will obtain the total number of abrupt braking events. We then divide by the number of insured days to create a new measure of driving quality: the number of daily abrupt braking events. We will perform this exercise for the 5 measures of abrupt braking events. Just like for the average daily distance traveled, we end up with a new variable measuring an intensity, this time the average daily intensity of abrupt braking events.\n\nFurthermore, some control will also be added to reduce the number of outliers. To do this, for each count of abrupt braking events, we will limit the obtained value by the 99th percentile.\n\nThe 6 graphs below illustrate the relationship between the number of daily abrupt braking events and claim frequency. For all 6 scenarios, a clear relationship can be observed between an increase in the number of abrupt braking events and the average claim frequency.\n\n\n\n::: {#fig-Brake .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Brake.06miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.08miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.09miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Brake.11miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.12miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Brake.14miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of brakes per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Brakes of 6 mph](DataSummary_files/figure-html/fig-Brake-1.png){#fig-Brake-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 8 mph](DataSummary_files/figure-html/fig-Brake-2.png){#fig-Brake-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 9 mph](DataSummary_files/figure-html/fig-Brake-3.png){#fig-Brake-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 11 mph](DataSummary_files/figure-html/fig-Brake-4.png){#fig-Brake-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 12 mph](DataSummary_files/figure-html/fig-Brake-5.png){#fig-Brake-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Brakes of 14 mph](DataSummary_files/figure-html/fig-Brake-6.png){#fig-Brake-6 width=672}\n:::\n\nClaims Frequency vs. Average number of brakes\n:::\n\n\n\n### Accelerations\n\nSimilarly to braking events, we need to convert accelerations, which are normalized by miles driven, into average daily accelerations. We will again control the possible values to not exceed the 99th percentile. The 6 graphs below illustrate the relationship between the average acceleration and claim frequency.\n\nOnce again, a clear link between the increase in the number of accelerations and the number of claims can be observed, except for a slight decrease with accelerations of 14mph. However, given the very small number of such extreme accelerations, this does not change our conclusion.\n\n\n::: {#fig-Accel .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Accel.06miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.08miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.09miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.11miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.12miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Accel.14miles'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of accelerations per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Accelerations of 6 mph](DataSummary_files/figure-html/fig-Accel-1.png){#fig-Accel-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 8 mph](DataSummary_files/figure-html/fig-Accel-2.png){#fig-Accel-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 9 mph](DataSummary_files/figure-html/fig-Accel-3.png){#fig-Accel-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 11 mph](DataSummary_files/figure-html/fig-Accel-4.png){#fig-Accel-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 12 mph](DataSummary_files/figure-html/fig-Accel-5.png){#fig-Accel-5 width=672}\n:::\n\n::: {.cell-output-display}\n![Accelerations of 14 mph](DataSummary_files/figure-html/fig-Accel-6.png){#fig-Accel-6 width=672}\n:::\n\nClaims Frequency vs. Average number of accelerations\n:::\n\n\n### Right turns\n\n\n\n::: {#fig-Right .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Right.turn.intensity08'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity09'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity10'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity11'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\nvar <- 'Right.turn.intensity12'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of right turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Right turns of 8 mph](DataSummary_files/figure-html/fig-Right-1.png){#fig-Right-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 9 mph](DataSummary_files/figure-html/fig-Right-2.png){#fig-Right-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 10 mph](DataSummary_files/figure-html/fig-Right-3.png){#fig-Right-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 11 mph](DataSummary_files/figure-html/fig-Right-4.png){#fig-Right-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Right turns of 12 mph](DataSummary_files/figure-html/fig-Right-5.png){#fig-Right-5 width=672}\n:::\n\nClaims Frequency vs. Average number of right turns\n:::\n\n\n\n\n### Left turns\n\n\n\n::: {#fig-Left .cell layout-nrow=\"2\" layout-ncol=\"3\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nvar <- 'Left.turn.intensity08'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity09'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity10'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity11'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n\n\nvar <- 'Left.turn.intensity12'\ndf2 <- train %>% mutate(VAR = get(var))\nq99 <- quantile(df2$VAR, 0.99)\ndiv <- q99/15\ntrain %>%\n  dplyr::mutate(Duration.y = Duration/365.25,\n                VAR = ifelse(get(var) > q99, q99, get(var)),\n                Group = ceiling(VAR/div) * div) %>%\n  group_by(Group) %>% \n  summarize(NB_Claim=sum(NB_Claim),\n            expo=sum(Duration.y)) %>% \n  mutate(freq = NB_Claim/expo) %>%\n  ggplot(aes(x=Group, y=freq)) + \n  geom_point(aes(size=expo), color='black') + scale_size_continuous(range = c(1,4)) +\n  geom_smooth(aes(weight = expo),se=T, color='red', size=1) + \n  labs(x = 'Average number of left turns per day',\n       y = 'Claims frequency') +\n  guides(size = guide_legend(title = \"Total exposures\")) +\n  #xlim(0,40000)+\n  #ylim(-0.01, 0.06)+\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![Left turns of 8 mph](DataSummary_files/figure-html/fig-Left-1.png){#fig-Left-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 9 mph](DataSummary_files/figure-html/fig-Left-2.png){#fig-Left-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 10 mph](DataSummary_files/figure-html/fig-Left-3.png){#fig-Left-3 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 11 mph](DataSummary_files/figure-html/fig-Left-4.png){#fig-Left-4 width=672}\n:::\n\n::: {.cell-output-display}\n![Left turns of 12 mph](DataSummary_files/figure-html/fig-Left-5.png){#fig-Left-5 width=672}\n:::\n\nClaims Frequency vs. Average number of left turns\n:::\n\n\n\n### Correlation\n\nThe correlation between all variables measuring driving quality can be analyzed by looking at the tables below. Unsurprisingly, we can observe that different accelerations and different braking events are strongly correlated. It's even apparent that insured individuals with high accelerations likely also exhibit strong braking events. The dependency between accelerations, braking events, and sensitive variables is very weak. Thus, the driving quality as measured in the studied database may not be able to replace the predictive capacity of sensitive covariates. The intensity of turns to the left or right also does not seem to explain the sensitive variables.\n\n\n\n::: {#fig-Corr4 .cell layout-nrow=\"2\" layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\ntrain2 <- train %>%\n  mutate(Miles.per.day = Total.miles.driven/Duration,\n         max.day = pmax(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         min.day = pmin(Pct.drive.mon, Pct.drive.tue, Pct.drive.wed, Pct.drive.thr, Pct.drive.fri, Pct.drive.sat, Pct.drive.sun),\n         max.min = max.day - min.day,\n         Dayformax = 'Monday', \n         Dayformax = ifelse(max.day == Pct.drive.tue, 'Tuesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.wed, 'Wednesday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.thr, 'Thursday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.fri, 'Friday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sat, 'Saturday', Dayformax),\n         Dayformax = ifelse(max.day == Pct.drive.sun, 'Sunday', Dayformax),\n         Dayformin = 'Monday', \n         Dayformin = ifelse(min.day == Pct.drive.tue, 'Tuesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.wed, 'Wednesday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.thr, 'Thursday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.fri, 'Friday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sat, 'Saturday', Dayformin),\n         Dayformin = ifelse(min.day == Pct.drive.sun, 'Sunday', Dayformin),\n         expo = Duration/365.25)\n\n\ntrad.vars  <- c(\"Marital\", \"Insured.sex\", \"Credit.score\", \"Insured.age\", \"Territory\",\n                \"Accel.06miles\", \"Accel.08miles\", \"Accel.09miles\", \"Accel.11miles\", \"Accel.12miles\", \"Accel.14miles\", \n               \"Brake.06miles\", \"Brake.08miles\", \"Brake.09miles\", \"Brake.11miles\", \"Brake.12miles\", \"Brake.14miles\", \n               \"Left.turn.intensity08\", \"Left.turn.intensity09\", \"Left.turn.intensity10\", \"Left.turn.intensity11\", \"Left.turn.intensity12\",\n               \"Right.turn.intensity08\", \"Right.turn.intensity09\", \"Right.turn.intensity10\", \"Right.turn.intensity11\", \"Right.turn.intensity12\")\n\ndata = data.matrix(train2[, paste(trad.vars)])\ncorrelation_matrix <- abs(cor(data))\n\ncorr1 <- correlation_matrix[6:17, 6:17]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 6:17]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\n\ncorr1 <- correlation_matrix[18:27, 18:27]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=4) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n\ncorr1 <- correlation_matrix[1:5, 18:27]\n\nggplot(data = as.data.frame(as.table(corr1)), aes(x = Var1, y = Var2, fill = Freq)) +\n    geom_tile() +\n    scale_fill_gradientn(colors = colorRampPalette(c(\"gray\", \"blue\", \"red\"))(50), name = \"Correlation\") +\n    geom_text(aes(label = round(Freq, 2)), color = \"white\", size=6) +\n    #scale_fill_continuous(na.value = 'white') +\n    theme_minimal() +\n    theme(axis.title.x = element_blank(),\n          axis.title.y = element_blank(),\n          axis.text.x = element_text(size=13, angle = 45, hjust = 1), \n          axis.text.y = element_text(size = 13),\n          plot.title = element_text(size = 13),   # Adjust plot title font size\n          legend.text = element_text(size = 13),\n          legend.title = element_text(size=13))\n```\n\n::: {.cell-output-display}\n![Telematic covariates](DataSummary_files/figure-html/fig-Corr4-1.png){#fig-Corr4-1 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr4-2.png){#fig-Corr4-2 width=672}\n:::\n\n::: {.cell-output-display}\n![Telematic covariates](DataSummary_files/figure-html/fig-Corr4-3.png){#fig-Corr4-3 width=672}\n:::\n\n::: {.cell-output-display}\n![With sensible covariates](DataSummary_files/figure-html/fig-Corr4-4.png){#fig-Corr4-4 width=672}\n:::\n\nCorrelation between covariates\n:::\n\n\n:::\n\n\n\n",
    "supporting": [
      "DataSummary_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}