"0","#| echo: false"
"0","#| message: FALSE"
"0","#| warning: FALSE"
"0","#| code-fold: true"
"0","#| label: tbl-Pscore_GLM1"
"0","#| tbl-cap: Prediction scores for the GLM1 model"
"0",""
"0","## Model "
"0","score.base <- as.formula(NB_Claim ~ 1 + offset(log(expo)))"
"0","score.glm <- as.formula(NB_Claim ~ Insured.sex + Marital  +  Car.use + Region + offset(log(expo)))"
"0",""
"0","## Model on each fold"
"0","Result_  <- data.frame()"
"0","Result2_  <- data.frame()"
"0","for(i in 1:nb.fold) {"
"0","    learn <- train2[train2$fold != i,]"
"0","    valid <- train2[train2$fold == i,]"
"0","    glm.fit <- glm(score.glm, family = poisson(), data = learn)"
"0",""
"0","    learn$pred.base <- predict(glm.fit, newdata=learn, type='response')"
"0","    valid$pred.base <- predict(glm.fit, newdata=valid, type='response')"
"0",""
"0","    Result_ <- rbind(Result_, c(i, Score.pred(valid$pred.base, valid$NB_Claim)/nrow(valid)))"
"0","    Result2_ <- rbind(Result2_, c(i, Score.pred(valid$pred.base, valid$NB_Claim)))"
"0","}"
"0",""
"0","## Model on all data from train"
"0","glm.base <- glm(score.base, family = poisson(), data = train2)"
"0","glm.fit <- glm(score.glm, family = poisson(), data = train2)"
"0","train2$pred.glm1 <- predict(glm.fit, newdata=train2, type='response')"
"0","Result.glm1 <- Result_  "
"0",""
"0","## Show results"
"0","colnames(Result_) <- c('Fold', ""Sc.log"", ""Sc.MSE"", ""Sc.quad"", ""Sc.sph"", ""Sc.DSS"", ""Sc.CRPS"")"
"0","colnames(Result2_) <- c('Fold', ""Sc.log"", ""Sc.MSE"", ""Sc.quad"", ""Sc.sph"", ""Sc.DSS"", ""Sc.CRPS"")"
"0","tot <- colSums(Result2_)/nrow(train2)"
"0","tot$Fold <- 'Total'"
"0","Result_ <- rbind(Result_ , tot)"
"0","Result_ <- rbind(Result_, Base)"
"0",""
"0","Result_[nb.fold+2,1] <- 'Improvement'"
"0",""
"0","for(i in 2:7){"
"0","  Result_[nb.fold+2,i] <-  Result_[nb.fold+1,i] - Result_[nb.fold+2,i]"
"0","}"
"0",""
"0",""
"0","rownames(Result_) <- NULL"
"0","knitr::kable(Result_, align = ""ccccccc"", digits = c(0, 5, 5, 5, 5, 5, 5), format.args = list(big.mark = "",""))%>%   "
"0","  kable_styling(bootstrap_options = ""striped"", full_width = T)  "
