# Conclusion

```{r}
#| echo: false
#| message: FALSE
#| warning: FALSE
#| code-fold: true

library(tidyverse)
library(vtable)
library(rpart)
library(repr)
library(rpart.plot)
library(gam)
library(knitr)
library(kableExtra)
library(janitor)
library(glmnet)
library(scoringRules)
library(sjPlot)

```

The analysis carried out in this report focused mainly on the usefulness that telematic variables could have in replacing, totally or in part, five protected variables: credit score, age of the insured, sex of the insured, marital status, and territory. A first descriptive analysis showed that among these variables, two had an impact (*Credit.score* and *Insured.age*), one had no impact (*Insured.sex*), and two (*Marital* and *Territory*) had some impact on both frequency and severity. In addition, we observe that two protected variables present a non-negligible correlation: *Credit.score* and *Insured.age*.

In a basic model with only categorical covariates, such as the insured's gender, marital status, vehicle usage, and region, the conclusions from the descriptive analysis are confirmed: the insured's gender has no impact, and the marital status has a minimal impact. This suggests that maintaining these two protected variables in a ratemaking model may not be justified at this stage.

After adding continuous variables, the different models considered make it possible to improve the scores consistently: XGBoost performs better than GLM-net, which performs better than GLM (trans.). In frequency and severity modeling, the transition from an easily interpretable approach (GLM) to a black box approach (XGBoost) is accompanied by a notable improvement in model performance. In a future project, evaluating the financial gain associated with this transition could allow a more informed decision to be made.


After adding the telematics variables to the analysis, we observe the following regarding the protected variables:  

- The credit score, while its impact is diminishing, remains a significant factor. It stands out as the only protected variable that telematics data cannot fully negate, affecting both frequency and severity.  
- Notably, the insured's age, which was once a key factor, now appears to have lost its significance in our analysis.  
- Similarly, the territory variable, except for one or two regions, no longer exerts a substantial influence.  
- The territory no longer seems to have an impact (except one or two regions). 
- The effect of marital status on the response variable, which initially seemed weak in the data, is reduced, or even canceled, by adding telematics variables, thus confirming the lack of interest in this variable in the presence of telematics data.

Finally, the effectiveness of telematic variables in replacing protected variables seems even more remarkable when an XGBoost model is used.

## Validation on the original dataset

We conducted our analysis on a synthetic database constructed from an actual database from a Canadian insurer. The use of synthetic databases in actuarial science is slowly developing (e.g., *Individual Claims History Simulation Machine* from [@GAB18] and *SynthETIC: Synthetic Experience Tracking Insurance Claims* on CRAN), but the history is still short. Thus, we consider that the conclusions must be validated on an actual database. Indeed, we want to prevent the mechanics that led to these artificial databases from creating distortions between variables. For example, one could imagine that a database created using a particular technique favors models using that same technique.

Overall, for both frequency and severity, we observe similar links between the average response variable by group and each of the explanatory variables, taken individually. This result is not surprising and confirms that the database creation process was correctly constructed. The correlation between the variables *Credit.score* and *Insured.age* is also observed in the original database.

The results of the first model containing only the categorical covariates are similar to those obtained with the synthetic database. In particular, we note the weak impact (but which does not seem zero) of the *Marital* variable on both frequency and severity.

Overall, adding continuous variables leads to the same conclusions as those obtained from the synthetic data. Nevertheless, we can raise a yellow flag: while the XGBoost model performs significantly better than the other models for the simulated data, this is not the case on the actual data (see tables below). Indeed, there is a slight improvement, but the cost/benefit ratio works against the XGBoost model for actual data. Having not thoroughly analyzed the method for creating the synthetic database, we can not offer a clear explanation for this phenomenon.

Most conclusions obtained regarding the impact of telematics on the usefulness of protected variables remain valid on the original database with the following caveat: the effect is sometimes less significant on the actual data. 

## Claims Frequency

The table below illustrates the various scores achieved for each database, allowing us to delve deeper into the comparison between synthetic data and real data. The XGBoost model appears to perform the best for both databases; however, as previously mentioned, it exhibits even better performance with synthetic data.

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| label: tbl-Conc3
#| tbl-cap: "Prediction scores (frequency)"

load('Data/ResultsSynth.Rda')
Synth <- Result_all[,1:3]

load('Data/ResultsReal.Rda')
Real <- Result_all[,2:3]

Result_all <- cbind(Synth, Real)
Result_all <- Result_all[,c(1,2,4,3,5)]
colnames(Result_all) <- c('Model', 'Synthetic Data', 'Original Data', 'Synthetic Data', 'Original Data')

knitr::kable(Result_all, align = "ccccc", digits = c(0, 5, 5, 5, 5), format.args = list(big.mark = ","))%>%   
  kable_styling(bootstrap_options = "striped", full_width = T)  %>%
  add_header_above(c("", "Sc.log" = 2, "Sc.MSE" = 2)) 


```


### Residuals and Protected variables

We can also revisit some of the graphs developed in previous chapters to compare better the results obtained with the two databases. One of the most critical graphs is the analysis of model residuals concerning protected covariates.

As a reminder, we utilize a model's prediction as an offset variable and assess whether the protected covariates still appear to capture a trend. If the resulting curve is horizontal and close to 1 for all possible values of a protected covariate, it indicates that telemetric variables seem to have captured that covariate's predictive capacity.

The various tabs below thus compare the residual curves for real and synthetic data. The main difference lies in the credit score: we observe that reducing its impact through the addition of telemetric information is more significant with synthetic data than with real data.

::: {.panel-tabset}

### Credit Score

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_CS
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resCS.rdata")
print(Graph_resCS)
load("Data/Graph_resCS2.rdata")
print(Graph_resCS)
```

### Age of the Insured

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Age
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resAge.rdata")
print(Graph_resAge)
load("Data/Graph_resAge2.rdata")
print(Graph_resAge)

```

### Sex of the Insured

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Sex
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resSex.rdata")
print(Graph_resSex)
load("Data/Graph_resSex2.rdata")
print(Graph_resSex)

```


### Marital Status

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Marital
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resMarital.rdata")
print(Graph_resMarital)
load("Data/Graph_resMarital2.rdata")
print(Graph_resMarital)

```


### Territory

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Terr
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resTerr.rdata")
print(Graph_resTerr)
load("Data/Graph_resTerr2.rdata")
print(Graph_resTerr)


```


:::



## Claims Severity

We can also compare different models for severity. The table below indicates the prediction scores obtained for various models across both databases. The conclusion aligns with the frequency analysis: the XGBoost model produces the best prediction scores, but the improvement in predictive quality is more significant with synthetic data than with original data. For instance, concerning real data, we observe that the scores obtained for the LASSO model (optimal) are pretty close to those achieved by XGBoost. In contrast, the difference between these two models is much more pronounced with synthetic data.

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| label: tbl-Conc1
#| tbl-cap: "Prediction scores (severity)"

load('Data/ResultsSynth_sev.Rda')
Synth <- Result_all[,1:3]

load('Data/ResultsReal_sev.Rda')
Real <- Result_all[,2:3]

Result_all <- cbind(Synth, Real)
Result_all <- Result_all[,c(1,2,4,3,5)]
colnames(Result_all) <- c('Model', 'Synthetic Data', 'Original Data', 'Synthetic Data', 'Original Data')

knitr::kable(Result_all, align = "ccccc", digits = c(0, 5, 5, 5, 5), format.args = list(big.mark = ","))%>%   
  kable_styling(bootstrap_options = "striped", full_width = T)  %>%
  add_header_above(c("", "Sc.log" = 2, "Sc.MSE" = 2)) 


```


### Residuals and Protected variables

In the tabs below, similar to frequency analysis, one can consult the trend analysis graph of residuals based on protected covariates. The results are similar, except for the credit score, which remains more significant in severity modeling for real data. 

::: {.panel-tabset}

### Credit Score

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_CS2
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resCS_sev.rdata")
print(Graph_resCS)
load("Data/Graph_resCS_sev2.rdata")
print(Graph_resCS)
```



### Age of the insured

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Age2
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resAge_sev.rdata")
print(Graph_resAge)
load("Data/Graph_resAge_sev2.rdata")
print(Graph_resAge)
```

### Sex of the Insured

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Sex2
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resSex_sev.rdata")
print(Graph_resSex)
load("Data/Graph_resSex_sev2.rdata")
print(Graph_resSex)

```


### Marital Status

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Marital2
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resMarital_sev.rdata")
print(Graph_resMarital)
load("Data/Graph_resMarital_sev2.rdata")
print(Graph_resMarital)

```


### Territory

```{r}
#| echo: true
#| message: FALSE
#| warning: FALSE
#| code-fold: true
#| layout-ncol: 2
#| label: fig-Conc_Terr2
#| fig-subcap: 
#|   - "Synthetic Dataset"
#|   - "Original Dataset"
#| fig-width: 9
#| fig-height: 4

load("Data/Graph_resTerr_sev.rdata")
print(Graph_resTerr)
load("Data/Graph_resTerr_sev2.rdata")
print(Graph_resTerr)

```

:::

